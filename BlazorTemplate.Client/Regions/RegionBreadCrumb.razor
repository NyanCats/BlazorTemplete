@using Microsoft.AspNetCore.Components.Routing

@implements IDisposable
@inject NavigationManager NavigationManager

<nav aria-label="breadcrumb" role="navigation">
    <ol class="breadcrumb">
        @foreach (var item in Locations)
        {
            var active = (Locations.Last() == item);
            <li class="breadcrumb-item @(active ? "text-info" : "")">@item</li>
        }

        <!-- Breadcrumb Menu-->
        <li class="breadcrumb-menu d-md-down-none">
            <div class="btn-group" role="group" aria-label="Button group">
                <a class="btn" href="#">
                    <i class="icon-speech"></i>
                </a>
                <a class="btn" href="./">
                    <i class="icon-graph"></i>  Dashboard
                </a>
                <a class="btn" href="#">
                    <i class="icon-settings"></i>  Settings
                </a>
            </div>
        </li>
    </ol>
</nav>
@code
{
    List<string> Locations = new List<string>();

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanges<LocationChangedEventArgs>;
        CreateLocations();
    }

    private void OnLocationChanges<LocationChangedEventArgs>(object sender, LocationChangedEventArgs e)
    {

        CreateLocations();
        StateHasChanged();
    }

    private void CreateLocations()
    {
        Locations.Clear();
        Locations.Add("Home");
        foreach (var item in NavigationManager.Uri.Replace(NavigationManager.BaseUri,"").Split('/'))
        {
            if (string.IsNullOrWhiteSpace(item)) { continue; }
            Locations.Add(item);
        }
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanges;
    }
}